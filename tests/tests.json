{
	"variables": [],
	"info": {
		"name": "AtHome WebAPI",
		"_postman_id": "718619de-6dab-a1d1-e3c7-ae8e1675fb60",
		"description": "",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
	},
	"item": [
		{
			"name": "0.Auth",
			"description": "",
			"item": [
				{
					"name": "1.Auth auth.arcan.fr",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (responseCode.code != 200)",
									"{",
									"    tests[\"Request OK\"] = false;",
									"    return;",
									"}",
									"tests[\"Request OK\"] = true;",
									"",
									"try",
									"{",
									"    var responseJSON = JSON.parse(responseBody);",
									"    var entity = responseJSON.Entity;",
									"    console.log(responseJSON);",
									"    if (entity.Url !== null && entity.Url.length > 0)",
									"    {",
									"        tests[\"AtHome URL\"] = true;",
									"        postman.setEnvironmentVariable(\"ARCAN_ATHOME_URL\", entity.Url);",
									"    }",
									"    else",
									"    {",
									"        tests[\"AtHome URL\"] = false;",
									"        postman.setEnvironmentVariable(\"ARCAN_ATHOME_URL\", \"\");",
									"    }",
									"    ",
									"    if (entity.Saml !== null && entity.Saml.length > 0)",
									"    {",
									"        tests[\"SAML\"] = true;",
									"        postman.setEnvironmentVariable(\"ARCAN_SAML\", entity.Saml);",
									"    }",
									"    else",
									"    {",
									"        tests[\"SAML\"] = false;",
									"        postman.setEnvironmentVariable(\"ARCAN_SAML\", \"\");",
									"    }",
									"}",
									"catch (e)",
									"{",
									"    tests[\"Response OK\"] = false;",
									"    postman.setEnvironmentVariable(\"ARCAN_COOKIE\", \"\");",
									"    return;",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"url": "{{ATHOME_AUTH_URL}}api/ApiLogin/GetAuthData?apiKey={{ATHOME_APIKEY}}&apiSecret={{ATHOME_APISECRET}}&uniqueCode={{ATHOME_UNIQUECODE}}",
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"Username\": \"{{ATHOME_LOGIN}}\",\n\t\"Password\": \"{{ATHOME_PASSWORD_HASH}}\"\n}"
						},
						"description": "Se connecte à AtHome et récupère le cookie d'auth."
					},
					"response": []
				},
				{
					"name": "2.Auth AtHome",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (responseCode.code != 200)",
									"{",
									"    tests[\"Request OK\"] = false;",
									"    return;",
									"}",
									"tests[\"Request OK\"] = true;",
									"",
									"try",
									"{",
									"    var responseJSON = JSON.parse(responseBody);",
									"    var entity = responseJSON.Entity;",
									"    console.log(responseJSON);",
									"    if (entity.Value !== null && entity.Value.length > 0)",
									"    {",
									"        tests[\"ArcanCookieAuth\"] = true;",
									"        postman.setEnvironmentVariable(\"ARCAN_COOKIE\", entity.Value);",
									"    }",
									"    else",
									"    {",
									"        tests[\"ArcanCookieAuth\"] = false;",
									"        postman.setEnvironmentVariable(\"ARCAN_COOKIE\", \"\");",
									"    }",
									"}",
									"catch (e)",
									"{",
									"    tests[\"Response OK\"] = false;",
									"    postman.setEnvironmentVariable(\"ARCAN_COOKIE\", \"\");",
									"    return;",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"url": "{{ARCAN_ATHOME_URL}}api/Authentification/Login",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"Saml\": \"{{ARCAN_SAML}}\"\n}"
						},
						"description": "Se connecte à AtHome et récupère le cookie d'auth."
					},
					"response": []
				}
			]
		},
		{
			"name": "1.Sejours",
			"description": "",
			"item": [
				{
					"name": "1.Get Sejour Par ID Externe",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (responseCode.code != 200)",
									"{",
									"    tests[\"Request OK\"] = false;",
									"    return;",
									"}",
									"tests[\"Request OK\"] = true;",
									"",
									"var responseJSON;",
									"try",
									"{",
									"    responseJSON = JSON.parse(responseBody);",
									"}",
									"catch (e)",
									"{",
									"    tests[\"Response OK\"] = false;",
									"    return;",
									"}",
									"",
									"if (responseJSON.Succeeded === true)",
									"{",
									"    tests[\"Response OK\"] = true;",
									"",
									"    var entity = responseJSON.Entity;",
									"    tests[\"SejourId\"] = entity.SejourId !== null && entity.SejourId > 0;",
									"    tests[\"PatientId\"] = entity.PatientId !== null && entity.PatientId > 0;",
									"    tests[\"DateDebut\"] = entity.DateDebut !== null && entity.DateDebut.length > 0;",
									"    tests[\"AntenneId\"] = entity.AntenneId !== null && entity.AntenneId > 0;",
									"    tests[\"AntenneNom\"] = entity.AntenneNom !== null && entity.AntenneNom.length > 0;",
									"    ",
									"    postman.setEnvironmentVariable(\"PATIENT_ID\", entity.PatientId);",
									"    postman.setEnvironmentVariable(\"SEJOUR_ID\", entity.SejourId);",
									"}",
									"else",
									"{",
									"    tests[\"Response OK\"] = false;",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"url": "{{ARCAN_ATHOME_URL}}/api/Sejour/Sejour/queries/GetSejourParIdExterneQuery ",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Cookie",
								"value": "ASP.NET_SessionId={{ASPNET}}; ArcanCookieAuth={{ARCAN_COOKIE}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"IdentifiantExterne\": \"{{SEJOUR_ID_EXTERNE}}\"\n}"
						},
						"description": "Retourne le séjour correspondant à l'ID externe."
					},
					"response": []
				},
				{
					"name": "2.Get Sejours Par Date",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (responseCode.code != 200)",
									"{",
									"    tests[\"Request OK\"] = false;",
									"    return;",
									"}",
									"tests[\"Request OK\"] = true;",
									"",
									"var responseJSON;",
									"try",
									"{",
									"    responseJSON = JSON.parse(responseBody);",
									"}",
									"catch (e)",
									"{",
									"    tests[\"Response OK\"] = false;",
									"    return;",
									"}",
									"",
									"if (responseJSON.Succeeded === true)",
									"{",
									"    tests[\"Response OK\"] = true;",
									"    ",
									"    var entities = responseJSON.Entity;",
									"    for (var i = 0; i < entities.length; i++)",
									"    {",
									"        var entity = entities[i];",
									"        var str_sejour = \"Sejour[\" + i + \"]\";",
									"        tests[str_sejour + \".SejourId\"] = entity.SejourId !== null && entity.SejourId > 0;",
									"        tests[str_sejour + \".PatientId\"] = entity.PatientId !== null && entity.PatientId > 0;",
									"        tests[str_sejour + \".DateDebut\"] = entity.DateDebut !== null && entity.DateDebut.length > 0;",
									"        tests[str_sejour + \".AntenneId\"] = entity.AntenneId !== null && entity.AntenneId > 0;",
									"        tests[str_sejour + \".AntenneNom\"] = entity.AntenneNom !== null && entity.AntenneNom.length > 0;",
									"    }",
									"}",
									"else",
									"{",
									"    tests[\"Response OK\"] = false;",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"url": "{{ARCAN_ATHOME_URL}}/api/Sejour/Sejour/queries/GetSejoursParDateQuery",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Cookie",
								"value": "ASP.NET_SessionId={{ASPNET}}; ArcanCookieAuth={{ARCAN_COOKIE}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"DateDebut\": \"{{DATE_DEBUT_SEJOUR}}\",\n  \"DateFin\": \"{{DATE_FIN_SEJOUR}}\"\n}"
						},
						"description": "Retourne une liste de séjours comprise entre les dates données."
					},
					"response": []
				}
			]
		},
		{
			"name": "2.Patients",
			"description": "",
			"item": [
				{
					"name": "1.Get Patient Par Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (responseCode.code != 200)",
									"{",
									"    tests[\"Request OK\"] = false;",
									"    return;",
									"}",
									"tests[\"Request OK\"] = true;",
									"",
									"var responseJSON;",
									"try",
									"{",
									"    responseJSON = JSON.parse(responseBody);",
									"}",
									"catch (e)",
									"{",
									"    tests[\"Response OK\"] = false;",
									"    return;",
									"}",
									"",
									"if (responseJSON.Succeeded === true)",
									"{",
									"    tests[\"Response OK\"] = true;",
									"",
									"    var entity = responseJSON.Entity;",
									"    tests[\"Patient ID\"] = entity.PatientId !== null && entity.PatientId > 0;",
									"    tests[\"Sexe\"] = entity.Sexe !== null && (entity.Sexe.toLowerCase() == \"feminin\" || entity.Sexe.toLowerCase() == \"masculin\");",
									"    tests[\"Civilite\"] = entity.Civilite !== null && (entity.Civilite.toLowerCase() == \"mr\" || entity.Civilite.toLowerCase() == \"mme\" || entity.Civilite.toLowerCase() == \"mlle\");",
									"    tests[\"Nom\"] = entity.Nom !== null && entity.Nom.length > 0;",
									"    tests[\"Prenom\"] = entity.Prenom !== null && entity.Prenom.length > 0;",
									"    tests[\"Nom Naissance\"] = entity.NomJeuneFille !== null && entity.NomJeuneFille.length > 0;",
									"    tests[\"Date Naissance\"] = entity.DateNaissance !== null && entity.DateNaissance.length > 0;",
									"    ",
									"    var adresses = entity.Adresses;",
									"    for (var i = 0; i < adresses.length; i++)",
									"    {",
									"        var adresse = adresses[i];",
									"        var str_adresse = \"Adresse[\" + i + \"]\";",
									"        tests[str_adresse + \".Libelle\"] = adresse.Libelle !== null && adresse.Libelle.length > 0;",
									"        tests[str_adresse + \".DateApplication\"] = adresse.DateApplication !== null && adresse.DateApplication.length > 0;",
									"        tests[str_adresse + \".VilleId\"] = adresse.VilleId !== null && adresse.VilleId > 0;",
									"        tests[str_adresse + \".VilleNom\"] = adresse.VilleNom !== null && adresse.VilleNom.length > 0;",
									"        tests[str_adresse + \".CodePostal\"] = adresse.CodePostal !== null && adresse.CodePostal.length > 0;",
									"        tests[str_adresse + \".Rue1\"] = adresse.Rue1 !== null && adresse.Rue1.length > 0;",
									"    }",
									"}",
									"else",
									"{",
									"    tests[\"Response OK\"] = false;",
									"}"
								]
							}
						}
					],
					"request": {
						"url": "{{ARCAN_ATHOME_URL}}/api/Patient/Patient/queries/GetPatientParIdQuery",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Cookie",
								"value": "ASP.NET_SessionId={{ASPNET}}; ArcanCookieAuth={{ARCAN_COOKIE}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"PatientId\": {{PATIENT_ID}}\n}"
						},
						"description": "Retourne le patient correspondant à l'ID donné."
					},
					"response": []
				}
			]
		},
		{
			"name": "3.Intervenants",
			"description": "",
			"item": [
				{
					"name": "1.Get Types Intervenants",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (responseCode.code != 200)",
									"{",
									"    tests[\"Request OK\"] = false;",
									"    return;",
									"}",
									"tests[\"Request OK\"] = true;",
									"",
									"var responseJSON;",
									"try",
									"{",
									"    responseJSON = JSON.parse(responseBody);",
									"}",
									"catch (e)",
									"{",
									"    tests[\"Response OK\"] = false;",
									"    return;",
									"}",
									"",
									"if (responseJSON.Succeeded === true)",
									"{",
									"    tests[\"Response OK\"] = true;",
									"    ",
									"    var entities = responseJSON.Entity;",
									"    for (var i = 0; i < entities.length; i++)",
									"    {",
									"        var entity = entities[i];",
									"        var str_type = \"TypeIntervenant[\" + i + \"]\";",
									"        tests[str_type + \".TypeIntervenantId\"] = entity.TypeIntervenantId !== null && entity.TypeIntervenantId > 0;",
									"        tests[str_type + \".Libelle\"] = entity.Libelle !== null && entity.Libelle.length > 0;",
									"        ",
									"        if (entity.Libelle.toLowerCase().includes(\"ide\") && !entity.Libelle.toLowerCase().includes(\"aide\"))",
									"        {",
									"            postman.setEnvironmentVariable(\"TYPE_INTERVENANT_ID\", entity.TypeIntervenantId);",
									"        }",
									"    }",
									"}",
									"else",
									"{",
									"    tests[\"Response OK\"] = false;",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"url": "{{ARCAN_ATHOME_URL}}/api/Sejour/Sejour/queries/GetTypesIntervenantsQuery",
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Cookie",
								"value": "ASP.NET_SessionId={{ASPNET}}; ArcanCookieAuth={{ARCAN_COOKIE}}",
								"description": ""
							}
						],
						"body": {},
						"description": "Retourne la liste des types d'intervenants."
					},
					"response": []
				}
			]
		},
		{
			"name": "4.Actes",
			"description": "",
			"item": [
				{
					"name": "1.Creer Acte",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (responseCode.code != 200)",
									"{",
									"    tests[\"Request OK\"] = false;",
									"    return;",
									"}",
									"tests[\"Request OK\"] = true;",
									"",
									"var responseJSON;",
									"try",
									"{",
									"    responseJSON = JSON.parse(responseBody);",
									"}",
									"catch (e)",
									"{",
									"    tests[\"Response is JSON\"] = false;",
									"    return;",
									"}",
									"",
									"if (responseJSON.Succeeded === true)",
									"{",
									"    tests[\"Response OK\"] = true;",
									"",
									"    var entity = responseJSON.Entity;",
									"    tests[\"ActeId\"] = entity !== null && entity > 0;",
									"    ",
									"    postman.setEnvironmentVariable(\"ACTE_CREE_ID\", entity);",
									"}",
									"else",
									"{",
									"    tests[\"Response OK\"] = false;",
									"    postman.setEnvironmentVariable(\"ACTE_CREE_ID\", null);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"url": "{{ARCAN_ATHOME_URL}}/api/Sejour/Acte/commands/CreerActeCommand/Execute",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Cookie",
								"value": "ASP.NET_SessionId={{ASPNET}}; ArcanCookieAuth={{ARCAN_COOKIE}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"Libelle\": \"API - Creation acte 2\",\n  \"LibelleCourt\": \"api crea acte 2\",\n  \"TypeIntervenantId\": {{TYPE_INTERVENANT_ID}}\n}"
						},
						"description": "Crée un acte et retourne son ID."
					},
					"response": []
				},
				{
					"name": "2.Get Actes",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (responseCode.code != 200)",
									"{",
									"    tests[\"Request OK\"] = false;",
									"    return;",
									"}",
									"tests[\"Request OK\"] = true;",
									"",
									"var responseJSON;",
									"try",
									"{",
									"    responseJSON = JSON.parse(responseBody);",
									"}",
									"catch (e)",
									"{",
									"    tests[\"Response is JSON\"] = false;",
									"    return;",
									"}",
									"",
									"if (responseJSON.Succeeded === true)",
									"{",
									"    tests[\"Response OK\"] = true;",
									"    ",
									"    var entities = responseJSON.Entity;",
									"    for (var i = 0; i < entities.length; i++)",
									"    {",
									"        var entity = entities[i];",
									"        var str_acte = \"Acte[\" + i + \"]\";",
									"        tests[str_acte + \".ActeId\"] = entity.ActeId !== null && entity.ActeId > 0;",
									"        tests[str_acte + \".Libelle\"] = entity.Libelle !== null && entity.Libelle.length > 0;",
									"        tests[str_acte + \".TypeIntervenantId\"] = entity.TypeIntervenantId !== null && entity.TypeIntervenantId > 0;",
									"        ",
									"        if (postman.getEnvironmentVariable(\"ACTE_CREE_ID\") === null || postman.getEnvironmentVariable(\"ACTE_CREE_ID\") === \"\")",
									"        {",
									"            if (entity.TypeIntervenantId == postman.getEnvironmentVariable(\"TYPE_INTERVENANT_ID\"))",
									"            {",
									"                postman.setEnvironmentVariable(\"ACTE_CREE_ID\", entity.ActeId);",
									"            }",
									"        }",
									"    }",
									"}",
									"else",
									"{",
									"    tests[\"Response OK\"] = false;",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"url": "{{ARCAN_ATHOME_URL}}/api/Sejour/Sejour/queries/GetActesQuery",
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Cookie",
								"value": "ASP.NET_SessionId={{ASPNET}}; ArcanCookieAuth={{ARCAN_COOKIE}}",
								"description": ""
							}
						],
						"body": {},
						"description": "Retourne la liste des actes disponibles sur AtHome."
					},
					"response": []
				},
				{
					"name": "3.Get Actes Par ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (responseCode.code != 200)",
									"{",
									"    tests[\"Request OK\"] = false;",
									"    return;",
									"}",
									"tests[\"Request OK\"] = true;",
									"",
									"var responseJSON;",
									"try",
									"{",
									"    responseJSON = JSON.parse(responseBody);",
									"}",
									"catch (e)",
									"{",
									"    tests[\"Response is JSON\"] = false;",
									"    return;",
									"}",
									"",
									"if (responseJSON.Succeeded === true)",
									"{",
									"    tests[\"Response OK\"] = true;",
									"",
									"    var entity = responseJSON.Entity;",
									"    tests[\"ActeId\"] = entity.ActeId !== null && entity.ActeId > 0;",
									"    tests[\"Libelle\"] = entity.Libelle !== null && entity.Libelle.length > 0;",
									"    tests[\"TypeIntervenantId\"] = entity.TypeIntervenantId !== null && entity.TypeIntervenantId > 0;",
									"}",
									"else",
									"{",
									"    tests[\"Response OK\"] = false;",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"url": "{{ARCAN_ATHOME_URL}}/api/Sejour/Sejour/queries/GetActeParIdQuery",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Cookie",
								"value": "ASP.NET_SessionId={{ASPNET}}; ArcanCookieAuth={{ARCAN_COOKIE}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"ActeId\": {{ACTE_CREE_ID}}\n}"
						},
						"description": "Retourne un acte en fonction de l'ID donné."
					},
					"response": []
				}
			]
		},
		{
			"name": "5.Plans de Soins",
			"description": "",
			"item": [
				{
					"name": "0.Creer Visite Salarie",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (responseCode.code != 200)",
									"{",
									"    tests[\"Request OK\"] = false;",
									"    return;",
									"}",
									"tests[\"Request OK\"] = true;",
									"",
									"var responseJSON;",
									"try",
									"{",
									"    responseJSON = JSON.parse(responseBody);",
									"}",
									"catch (e)",
									"{",
									"    tests[\"Response OK\"] = false;",
									"    return;",
									"}",
									"",
									"if (responseJSON.Succeeded === true)",
									"{",
									"    tests[\"Response OK\"] = true;",
									"}",
									"else",
									"{",
									"    tests[\"Response OK\"] = false;",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"url": "{{ARCAN_ATHOME_URL}}/api/Sejour/VisiteSalarie/commands/CreerVisiteSalarieCommand/Execute",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Cookie",
								"value": "ASP.NET_SessionId={{ASPNET}}; ArcanCookieAuth={{ARCAN_COOKIE}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"SejourId\": {{SEJOUR_ID}},\n  \"Date\": \"2020-06-23T09:15:02\",\n  \"HeureDebut\": \"0:8:30:0\",\n  \"TempsChevet\": 60,\n  \"DateCreation\": \"2020-06-23T09:15:02\",\n  \"Commentaire\": \"un petit com\",\n  \"EtatVisite\": 6,\n  \"CreateurId\": 0,\n  \"Actes\": [\n  \t{{ACTE_CREE_ID}}\n  ]\n}"
						},
						"description": "Crée un plan de soins."
					},
					"response": []
				},
				{
					"name": "0.Creer Ligne Soins Ponctuelle",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (responseCode.code != 200)",
									"{",
									"    tests[\"Request OK\"] = false;",
									"    return;",
									"}",
									"tests[\"Request OK\"] = true;",
									"",
									"var responseJSON;",
									"try",
									"{",
									"    responseJSON = JSON.parse(responseBody);",
									"}",
									"catch (e)",
									"{",
									"    tests[\"Response OK\"] = false;",
									"    return;",
									"}",
									"",
									"if (responseJSON.Succeeded === true)",
									"{",
									"    tests[\"Response OK\"] = true;",
									"}",
									"else",
									"{",
									"    tests[\"Response OK\"] = false;",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"url": "{{ARCAN_ATHOME_URL}}/api/Sejour/PlanSoinSalarie/commands/CreerLigneSoinsSalariePonctuelleCommand/Execute",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Cookie",
								"value": "ASP.NET_SessionId={{ASPNET}}; ArcanCookieAuth={{ARCAN_COOKIE}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"SejourId\": 30,\n  \"TypeIntervenantId\": 12,\n  \"Date\": \"2017-03-14T16:18:54.227Z\",\n  \"Jour\": 3,\n  \"HeureDebut\": \"0:08:30:00\",\n  \"HeureFin\": \"0:09:30:00\",\n  \"Commentaire\": \"string\",\n  \"ActeIds\": [\n    1\n  ]\n}"
						},
						"description": "Crée un plan de soins."
					},
					"response": []
				},
				{
					"name": "1.Get Plans Soins Par Sejours Et Dates",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (responseCode.code != 200)",
									"{",
									"    tests[\"Request OK\"] = false;",
									"    return;",
									"}",
									"tests[\"Request OK\"] = true;",
									"",
									"var responseJSON;",
									"try",
									"{",
									"    responseJSON = JSON.parse(responseBody);",
									"}",
									"catch (e)",
									"{",
									"    tests[\"Response OK\"] = false;",
									"    return;",
									"}",
									"",
									"if (responseJSON.Succeeded === true)",
									"{",
									"    tests[\"Response OK\"] = true;",
									"",
									"    var entities = responseJSON.Entity;",
									"    for (var i = 0; i < entities.length; i++)",
									"    {",
									"        var entity = entities[i];",
									"        var str_plan = \"PlanSoins[\" + i + \"]\";",
									"        tests[str_plan + \".SejourId\"] = entity.SejourId !== null && entity.SejourId > 0;",
									"        tests[str_plan + \".PlanSoinsId\"] = entity.PlanSoinsId !== null && entity.PlanSoinsId > 0;",
									"        tests[str_plan + \".DateDebut\"] = entity.DateDebut !== null && entity.DateDebut.length > 0;",
									"        tests[str_plan + \".TypeIntervenantId\"] = entity.TypeIntervenantId !== null && entity.TypeIntervenantId > 0;",
									"        tests[str_plan + \".TypeIntervenantLibelle\"] = entity.TypeIntervenantLibelle !== null && entity.TypeIntervenantLibelle.length > 0;",
									"    ",
									"        var lignes = entity.Lignes;",
									"        for (var j = 0; j < lignes.length; j++)",
									"        {",
									"            var ligne = lignes[j];",
									"            var str_ligne = \"Ligne[\" + j + \"]\";",
									"            tests[str_plan + \".\" + str_ligne + \".LignePlanSoinsId\"] = ligne.LignePlanSoinsId !== null && ligne.LignePlanSoinsId > 0;",
									"            tests[str_plan + \".\" + str_ligne + \".HeureDebut\"] = ligne.HeureDebut !== null && ligne.HeureDebut.length > 0;",
									"            tests[str_plan + \".\" + str_ligne + \".HeureFin\"] = ligne.HeureFin !== null && ligne.HeureFin.length > 0;",
									"",
									"            var actes = ligne.Actes;",
									"            for (var k = 0; k < actes.length; k++)",
									"            {",
									"                var acte = actes[k];",
									"                var str_acte = \"Acte[\" + k + \"]\";",
									"                tests[str_plan + \".\" + str_ligne + \".\" + str_acte + \".ActeId\"] = acte.ActeId !== null && acte.ActeId > 0;",
									"                tests[str_plan + \".\" + str_ligne + \".\" + str_acte + \".Libelle\"] = acte.Libelle !== null && acte.Libelle.length > 0;",
									"            }",
									"        }",
									"        ",
									"        postman.setEnvironmentVariable(\"PLAN_SOINS_ID\", entity.PlanSoinsId);",
									"    }",
									"}",
									"else",
									"{",
									"    tests[\"Response OK\"] = false;",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"url": "{{ARCAN_ATHOME_URL}}/api/Sejour/PlanSoinSalarie/queries/GetPlansSoinsParSejoursEtDatesQuery",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Cookie",
								"value": "ASP.NET_SessionId={{ASPNET}}; ArcanCookieAuth={{ARCAN_COOKIE}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"SejourIds\": [\n  \t{{SEJOUR_ID}}\n  \t],\n  \"DateDebut\": \"2015-05-23T08:00:00\"\n}"
						},
						"description": "Retourne une liste de plans de soins associée aux séjours et dates donnés."
					},
					"response": []
				},
				{
					"name": "2.Get Plans Soins Par ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (responseCode.code != 200)",
									"{",
									"    tests[\"Request OK\"] = false;",
									"    return;",
									"}",
									"tests[\"Request OK\"] = true;",
									"",
									"var responseJSON;",
									"try",
									"{",
									"    responseJSON = JSON.parse(responseBody);",
									"}",
									"catch (e)",
									"{",
									"    tests[\"Response OK\"] = false;",
									"    return;",
									"}",
									"",
									"if (responseJSON.Succeeded === true)",
									"{",
									"    tests[\"Response OK\"] = true;",
									"",
									"    var entity = responseJSON.Entity;",
									"    tests[\"SejourId\"] = entity.SejourId !== null && entity.SejourId > 0;",
									"    tests[\"PlanSoinsId\"] = entity.PlanSoinsId !== null && entity.PlanSoinsId > 0;",
									"    tests[\"DateDebut\"] = entity.DateDebut !== null && entity.DateDebut.length > 0;",
									"    tests[\"TypeIntervenantId\"] = entity.TypeIntervenantId !== null && entity.TypeIntervenantId > 0;",
									"    tests[\"TypeIntervenantLibelle\"] = entity.TypeIntervenantLibelle !== null && entity.TypeIntervenantLibelle.length > 0;",
									"    ",
									"    var lignes = entity.Lignes;",
									"    for (var i = 0; i < lignes.length; i++)",
									"    {",
									"        var ligne = lignes[i];",
									"        var str_ligne = \"Ligne[\" + i + \"]\";",
									"        tests[str_ligne + \".LignePlanSoinsId\"] = ligne.LignePlanSoinsId !== null && ligne.LignePlanSoinsId > 0;",
									"        tests[str_ligne + \".HeureDebut\"] = ligne.HeureDebut !== null && ligne.HeureDebut.length > 0;",
									"        tests[str_ligne + \".HeureFin\"] = ligne.HeureFin !== null && ligne.HeureFin.length > 0;",
									"",
									"        var actes = ligne.Actes;",
									"        for (var j = 0; j < actes.length; j++)",
									"        {",
									"            var acte = actes[j];",
									"            var str_acte = \"Acte[\" + j + \"]\";",
									"            tests[str_ligne + \".\" + str_acte + \".ActeId\"] = acte.ActeId !== null && acte.ActeId > 0;",
									"            tests[str_ligne + \".\" + str_acte + \".Libelle\"] = acte.Libelle !== null && acte.Libelle.length > 0;",
									"        }",
									"    }",
									"}",
									"else",
									"{",
									"    tests[\"Response OK\"] = false;",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"url": "{{ARCAN_ATHOME_URL}}/api/Sejour/PlanSoinSalarie/queries/GetPlansSoinsParIdQuery",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Cookie",
								"value": "ASP.NET_SessionId={{ASPNET}}; ArcanCookieAuth={{ARCAN_COOKIE}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"PlanSoinsId\": {{PLAN_SOINS_ID}}\n}"
						},
						"description": "Retourne le plan de soins correspondant à l'ID donné."
					},
					"response": []
				},
				{
					"name": "3.Creer Plan De Soin Salarie",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (responseCode.code != 200)",
									"{",
									"    tests[\"Request OK\"] = false;",
									"    return;",
									"}",
									"tests[\"Request OK\"] = true;",
									"",
									"var responseJSON;",
									"try",
									"{",
									"    responseJSON = JSON.parse(responseBody);",
									"}",
									"catch (e)",
									"{",
									"    tests[\"Response OK\"] = false;",
									"    return;",
									"}",
									"",
									"if (responseJSON.Succeeded === true)",
									"{",
									"    tests[\"Response OK\"] = true;",
									"    ",
									"    postman.setEnvironmentVariable(\"PLAN_SOINS_CREE_ID\", entity);",
									"}",
									"else",
									"{",
									"    tests[\"Response OK\"] = false;",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"url": "{{ARCAN_ATHOME_URL}}/api/Sejour/PlanSoinSalarie/commands/CreerPlanDeSoinSalarieCommand/Execute",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Cookie",
								"value": "ASP.NET_SessionId={{ASPNET}}; ArcanCookieAuth={{ARCAN_COOKIE}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"DateDebut\": \"2020-05-23T09:15:02\",\n  \"DateFin\": \"2020-06-23T09:15:02\",\n  \"TypeIntervenantId\": {{TYPE_INTERVENANT_ID}},\n  \"SejourId\": {{SEJOUR_ID}},\n  \"EtatPlanSoin\": 1,\n  \"Commentaire\": \"un petit com\",\n  \"Lignes\": [\n    {\n      \"Jour\": 0,\n      \"HeureDebut\": \"0:8:30:0\",\n      \"HeureFin\": \"0:9:30:0\",\n      \"Obligatoire\": true,\n      \"ActeIds\": [\n        {{ACTE_CREE_ID}}\n      ]\n    }\n  ]\n}"
						},
						"description": "Crée un plan de soins."
					},
					"response": []
				},
				{
					"name": "4.Mettre A Jour Plan De Soins Salarie",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (responseCode.code != 200)",
									"{",
									"    tests[\"Request OK\"] = false;",
									"    return;",
									"}",
									"tests[\"Request OK\"] = true;",
									"",
									"var responseJSON;",
									"try",
									"{",
									"    responseJSON = JSON.parse(responseBody);",
									"}",
									"catch (e)",
									"{",
									"    tests[\"Response OK\"] = false;",
									"    return;",
									"}",
									"",
									"if (responseJSON.Succeeded === true)",
									"{",
									"    tests[\"Response OK\"] = true;",
									"}",
									"else",
									"{",
									"    tests[\"Response OK\"] = false;",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"url": "{{ARCAN_ATHOME_URL}}/api/Sejour/PlanSoinSalarie/commands/MettreAJourPlanDeSoinSalarieCommand/Execute",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Cookie",
								"value": "ASP.NET_SessionId={{ASPNET}}; ArcanCookieAuth={{ARCAN_COOKIE}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"PlanSoinId\": {{PLAN_SOINS_CREE_ID}},\n  \"DateDebut\": \"2021-05-23T09:15:02\",\n  \"DateFin\": \"2021-06-23T09:15:02\",\n  \"TypeIntervenantId\": {{TYPE_INTERVENANT_ID}},\n  \"SejourId\": {{SEJOUR_ID}},\n  \"EtatPlanSoin\": 1,\n  \"Commentaire\": \"un petit com MAJ\",\n  \"Lignes\": [\n    {\n      \"Jour\": 0,\n      \"HeureDebut\": \"0:9:30:0\",\n      \"HeureFin\": \"0:10:30:0\",\n      \"Obligatoire\": true,\n      \"ActeIds\": [\n        {{ACTE_CREE_ID}}\n      ]\n    }\n  ]\n}"
						},
						"description": "Met-à-jour un plan de soins."
					},
					"response": []
				},
				{
					"name": "5.Supprimer Plan Soins",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (responseCode.code != 200)",
									"{",
									"    tests[\"Request OK\"] = false;",
									"    return;",
									"}",
									"tests[\"Request OK\"] = true;",
									"",
									"var responseJSON;",
									"try",
									"{",
									"    responseJSON = JSON.parse(responseBody);",
									"}",
									"catch (e)",
									"{",
									"    tests[\"Response OK\"] = false;",
									"    return;",
									"}",
									"",
									"if (responseJSON.Succeeded === true)",
									"{",
									"    tests[\"Response OK\"] = true;",
									"}",
									"else",
									"{",
									"    tests[\"Response OK\"] = false;",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"url": "{{ARCAN_ATHOME_URL}}/api/Sejour/PlanSoinSalarie/commands/SupprimerPlanSoinCommand/Execute",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Cookie",
								"value": "ASP.NET_SessionId={{ASPNET}}; ArcanCookieAuth={{ARCAN_COOKIE}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"PlanSoinId\": {{PLAN_SOINS_CREE_ID}}\n}"
						},
						"description": "Supprime le plan de soins correspondant à l'ID donné."
					},
					"response": []
				}
			]
		}
	]
}
